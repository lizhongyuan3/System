<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bbd.dao.StuiscouDao">

    <resultMap id="student_map_course" type="com.bbd.entity.Stuiscou">
        <id property="couId" column="cou_id"/>
        <result property="stuId" column="stu_id"/>
        <!-- 多个学生可以选择同一门课程所以是多对一的关系 实在不行，看id吧-->
        <association property="course" javaType="com.bbd.entity.Course">
            <id property="courseId" column="course_id"/>
            <result property="courseName" column="course_name"/>
            <result property="courseTime" column="course_time"/>
            <result property="courseTea" column="course_tea"/>
        </association>
        <association property="teacher" javaType="com.bbd.entity.Teacher">
            <id property="teacherId" column="teacher_id"/>
            <result property="teacherName" column="teacher_name"/>
            <result property="teacherEdu" column="teacher_edu"/>
        </association>
        <collection property="students" ofType="com.bbd.entity.Student">
            <id property="studentId" column="student_id"/>
            <result property="studentName" column="student_name"/>
            <result property="studentSex" column="student_sex"/>
            <result property="studentLike" column="student_like"/>
        </collection>
    </resultMap>
    <select id="queryAllStudentiscou" resultMap="student_map_course">
        SELECT t.*,c.*,sc.*,s.*
        FROM (SELECT * FROM teacher WHERE del_state=0)t
        JOIN course c
        ON t.teacher_id=c.course_tea
        JOIN stuiscou sc
        on c.course_id=sc.cou_id
        JOIN student s
        on sc.stu_id=s.student_id
        ORDER BY c.course_id ,s.student_id ASC
    </select>
    
    <select id="queryByTeacherId" resultMap="student_map_course">
        SELECT t.*,sc.*,c.*,s.*
        FROM teacher t
        JOIN course c
        ON t.teacher_id=c.course_tea
        JOIN stuiscou sc
        on c.course_id=sc.cou_id
        JOIN student s
        on sc.stu_id=s.student_id
		WHERE t.del_state=0 AND s.del_state=0 AND t.teacher_id=#{teacherId}
        ORDER BY c.course_id ,s.student_id ASC

    </select>

    <select id="queryByStudentId" resultMap="student_map_course">
        SELECT s.*,sc.*,c.*,t.*
        FROM teacher t
        JOIN course c
        ON t.teacher_id=c.course_tea
        JOIN stuiscou sc
        on c.course_id=sc.cou_id
        JOIN student s
        on sc.stu_id=s.student_id
		WHERE t.del_state=0 AND s.del_state=0 AND s.student_id=#{studentId}
        ORDER BY c.course_id ,s.student_id ASC
    </select>
    <resultMap id="student_map1_course" type="com.bbd.entity.Stuiscou">
        <id property="stuId" column="stu_id"/>
        <result property="couId" column="cou_id"/>
        <!-- 多个学生可以选择同一门课程所以是多对一的关系 实在不行，看id吧-->
        <association property="student" javaType="com.bbd.entity.Student">
        <id property="studentId" column="student_id"/>
        <result property="studentName" column="student_name"/>
        <result property="studentSex" column="student_sex"/>
        <result property="studentLike" column="student_like"/>
    </association>
        <collection property="teachers" ofType="com.bbd.entity.Teacher">
            <id property="teacherId" column="teacher_id"/>
            <result property="teacherName" column="teacher_name"/>
            <result property="teacherEdu" column="teacher_edu"/>
        </collection>

        <collection property="courses" ofType="com.bbd.entity.Course">
            <id property="courseId" column="course_id"/>
            <result property="courseName" column="course_name"/>
            <result property="courseTime" column="course_time"/>
            <result property="courseTea" column="course_tea"/>
        </collection>


    </resultMap>


    <select id="queryAllStuXuan" resultMap="student_map1_course">
        SELECT s.*,sc.*,c.*,t.*
        FROM (SELECT * FROM student WHERE del_state=0)s
        JOIN stuiscou sc
        ON s.student_id=sc.stu_id
        JOIN course c
        on sc.cou_id=c.course_id
        JOIN (SELECT * FROM teacher WHERE del_state=0) t
        on c.course_tea=t.teacher_id
        ORDER BY s.student_id ,c.course_id ASC
    </select>

    <!--查询学生未选课程-->
    <resultMap id="Not_Select_Course" type="com.bbd.entity.Stuiscou">
        <id property="couId" column="cou_id"/>
        <result property="stuId" column="stu_id"/>

        <association property="course" javaType="com.bbd.entity.Course">
            <id property="courseId" column="course_id"/>
            <result property="courseName" column="course_name"/>
            <result property="courseTime" column="course_time"/>
            <result property="courseTea" column="course_tea"/>
        </association>

        <association property="teacher" javaType="com.bbd.entity.Teacher">
            <id property="teacherId" column="teacher_id"/>
            <result property="teacherName" column="teacher_name"/>
            <result property="teacherEdu" column="teacher_edu"/>
        </association>

    </resultMap>

    <select id="countStudentId" resultMap="Not_Select_Course">
        SELECT  t.*,c.*
        FROM teacher t
        JOIN (SELECT * FROM course WHERE course_id NOT IN(SELECT cou_id FROM stuiscou WHERE stu_id=#{stuId})) c
        ON t.teacher_id=c.course_tea
		WHERE t.del_state=0
        ORDER BY c.course_id  ASC
    </select>

    <!--通过课程id查课余量-->
    <select id="countCourseId" resultType="com.bbd.entity.Stuiscou">
        SELECT *
        FROM stuiscou
        WHERE cou_id=#{couId}
    </select>

    <!--学生退课-->
    <delete id="delStudentCourse" >
        DELETE
        FROM stuiscou
        WHERE cou_id=#{couId} AND stu_id=#{stuId}
    </delete>

    <!--学生选课-->
    <insert id="addStudentCourse">
        INSERT INTO stuiscou
        (stu_id,cou_id) VALUES (#{stuId},#{couId})
    </insert>

</mapper>